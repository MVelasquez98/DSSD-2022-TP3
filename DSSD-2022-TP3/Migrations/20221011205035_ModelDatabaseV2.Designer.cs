// <auto-generated />
using DSSD_2022_TP3;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DSSD_2022_TP3.Migrations
{
    [DbContext(typeof(AcademicaContext))]
    [Migration("20221011205035_ModelDatabaseV2")]
    partial class ModelDatabaseV2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DSSD_2022_TP3.Model.Carrera", b =>
                {
                    b.Property<int>("IdCarrera")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCarrera");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("carrera");

                    b.HasKey("IdCarrera");

                    b.ToTable("carreras");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Comision", b =>
                {
                    b.Property<int>("IdComision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idComision");

                    b.Property<string>("Anio")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("anio");

                    b.Property<int>("IdDia")
                        .HasColumnType("int")
                        .HasColumnName("idDia");

                    b.Property<int>("IdInscripcion")
                        .HasColumnType("int")
                        .HasColumnName("idInscripcion");

                    b.Property<int>("IdMateria")
                        .HasColumnType("int")
                        .HasColumnName("idMateria");

                    b.Property<int>("IdTurno")
                        .HasColumnType("int")
                        .HasColumnName("idTurno");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("NroComision")
                        .HasColumnType("int")
                        .HasColumnName("comision");

                    b.Property<string>("RangoHorario")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("rangoHorario");

                    b.HasKey("IdComision");

                    b.HasIndex("IdDia");

                    b.HasIndex("IdInscripcion");

                    b.HasIndex("IdMateria");

                    b.HasIndex("IdTurno");

                    b.HasIndex("IdUsuario");

                    b.ToTable("comisiones");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.DetalleInscripcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleInscripcion");

                    b.Property<bool>("Baja")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("baja");

                    b.Property<string>("FechaInscripcion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fechaInscripcion");

                    b.Property<int>("IdComision")
                        .HasColumnType("int")
                        .HasColumnName("idComision");

                    b.Property<int>("IdInscripcion")
                        .HasColumnType("int")
                        .HasColumnName("idInscripcion");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.HasKey("Id");

                    b.HasIndex("IdComision");

                    b.HasIndex("IdInscripcion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("detalle_inscripcion");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Dia", b =>
                {
                    b.Property<int>("IdDia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("dia");

                    b.HasKey("IdDia");

                    b.ToTable("dias");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.HistorialAcademico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idHistorialAcademico");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fecha");

                    b.Property<int>("IdComsion")
                        .HasColumnType("int")
                        .HasColumnName("idComsion");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<int>("Nota")
                        .HasColumnType("int")
                        .HasColumnName("nota");

                    b.HasKey("Id");

                    b.HasIndex("IdComsion");

                    b.HasIndex("IdUsuario");

                    b.ToTable("historial_academico");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Inscripcion", b =>
                {
                    b.Property<int>("IdInscripcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idInscripcion");

                    b.Property<string>("Anio")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("anio");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("descripcion");

                    b.Property<string>("Desde")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("desde");

                    b.Property<string>("Fecha")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fecha");

                    b.Property<string>("FechaCierre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("fechaCierre");

                    b.Property<string>("Hasta")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("hasta");

                    b.Property<int>("IdInstancia")
                        .HasColumnType("int")
                        .HasColumnName("idInstancia");

                    b.HasKey("IdInscripcion");

                    b.HasIndex("IdInstancia");

                    b.ToTable("inscripciones");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Instancia", b =>
                {
                    b.Property<int>("IdInstancia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idInstancia");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("instancia");

                    b.HasKey("IdInstancia");

                    b.ToTable("instancias");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Materia", b =>
                {
                    b.Property<int>("IdMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMateria");

                    b.Property<int>("AnioCarrera")
                        .HasColumnType("int")
                        .HasColumnName("anioCarrera");

                    b.Property<int>("IdCarrera")
                        .HasColumnType("int")
                        .HasColumnName("idCarrera");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("materia");

                    b.HasKey("IdMateria");

                    b.HasIndex("IdCarrera");

                    b.ToTable("materias");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.NotaComision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idComision");

                    b.Property<int>("IdTipoNota")
                        .HasColumnType("int")
                        .HasColumnName("idTipoNota");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Nota")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nota");

                    b.HasKey("Id");

                    b.HasIndex("IdTipoNota");

                    b.HasIndex("IdUsuario");

                    b.ToTable("notas_comision");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.TipoNota", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoNota");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipoNota");

                    b.HasKey("Id");

                    b.ToTable("tipos_nota");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.TipoUsuario", b =>
                {
                    b.Property<int>("IdTipoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTipoUsuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("tipoUsuario");

                    b.HasKey("IdTipoUsuario");

                    b.ToTable("tipos_de_usuario");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Turno", b =>
                {
                    b.Property<int>("IdTurno")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idTurno");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("turno");

                    b.HasKey("IdTurno");

                    b.ToTable("turnos");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("apellido");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("celular");

                    b.Property<string>("Clave")
                        .HasColumnType("longtext")
                        .HasColumnName("clave");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("correo");

                    b.Property<string>("Dni")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("dni");

                    b.Property<bool>("ForzarClave")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("forzarClave");

                    b.Property<int>("IdCarrera")
                        .HasColumnType("int")
                        .HasColumnName("idCarrera");

                    b.Property<int>("IdTipoUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idTipoUsuario");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext")
                        .HasColumnName("nombre");

                    b.Property<string>("Username")
                        .HasColumnType("longtext")
                        .HasColumnName("usuario");

                    b.HasKey("IdUsuario");

                    b.HasIndex("IdCarrera");

                    b.HasIndex("IdTipoUsuario");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Comision", b =>
                {
                    b.HasOne("DSSD_2022_TP3.Model.Dia", "Dia")
                        .WithMany()
                        .HasForeignKey("IdDia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSSD_2022_TP3.Model.Inscripcion", "Inscripcion")
                        .WithMany()
                        .HasForeignKey("IdInscripcion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSSD_2022_TP3.Model.Materia", "Materia")
                        .WithMany()
                        .HasForeignKey("IdMateria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSSD_2022_TP3.Model.Turno", "Turno")
                        .WithMany()
                        .HasForeignKey("IdTurno")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSSD_2022_TP3.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dia");

                    b.Navigation("Inscripcion");

                    b.Navigation("Materia");

                    b.Navigation("Turno");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.DetalleInscripcion", b =>
                {
                    b.HasOne("DSSD_2022_TP3.Model.Comision", "Comision")
                        .WithMany()
                        .HasForeignKey("IdComision")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSSD_2022_TP3.Model.Inscripcion", "Inscripcion")
                        .WithMany()
                        .HasForeignKey("IdInscripcion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSSD_2022_TP3.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comision");

                    b.Navigation("Inscripcion");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.HistorialAcademico", b =>
                {
                    b.HasOne("DSSD_2022_TP3.Model.Comision", "Comision")
                        .WithMany()
                        .HasForeignKey("IdComsion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSSD_2022_TP3.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Comision");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Inscripcion", b =>
                {
                    b.HasOne("DSSD_2022_TP3.Model.Instancia", "Instancia")
                        .WithMany()
                        .HasForeignKey("IdInstancia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instancia");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Materia", b =>
                {
                    b.HasOne("DSSD_2022_TP3.Model.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("IdCarrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.NotaComision", b =>
                {
                    b.HasOne("DSSD_2022_TP3.Model.TipoNota", "TipoNota")
                        .WithMany()
                        .HasForeignKey("IdTipoNota")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSSD_2022_TP3.Model.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoNota");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DSSD_2022_TP3.Model.Usuario", b =>
                {
                    b.HasOne("DSSD_2022_TP3.Model.Carrera", "Carrera")
                        .WithMany()
                        .HasForeignKey("IdCarrera")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DSSD_2022_TP3.Model.TipoUsuario", "TipoUsuario")
                        .WithMany()
                        .HasForeignKey("IdTipoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrera");

                    b.Navigation("TipoUsuario");
                });
#pragma warning restore 612, 618
        }
    }
}
